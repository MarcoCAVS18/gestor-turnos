/* =================================================================
   GlassButton Styles
   ================================================================= */

/* --- Base Styles & 3D Setup --- */
.glass-button {
  transform-style: preserve-d;
  transform: perspective(800px) rotateY(var(--rotate-y, 0deg)) rotateX(var(--rotate-x, 0deg));
  
  /* Themed styles are applied via CSS variables from the component */
  background: linear-gradient(135deg, var(--btn-bgStart), var(--btn-bgEnd));
  border-image: linear-gradient(135deg, var(--btn-borderStart), var(--btn-borderEnd)) 1;
  box-shadow: 0 8px 32px var(--btn-shadowColor);
  
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid transparent;
  background-clip: padding-box;
  
  position: relative;
  overflow: hidden;
  border-radius: 16px;
  cursor: pointer;
  color: white;
  font-weight: 600;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  transition: transform 0.1s linear, box-shadow 0.3s ease, background 0.3s ease;

  /* Style reset */
  outline: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

/* --- Interaction States --- */
.glass-button:hover:not(.glass-button-disabled):not(.glass-button-loading) {
  background: linear-gradient(135deg, var(--btn-bgHoverStart), var(--btn-bgHoverEnd));
  box-shadow: 0 12px 40px var(--btn-shadowColor);
}

.glass-button:active:not(.glass-button-disabled):not(.glass-button-loading) {
  transform: perspective(800px) rotateY(0deg) rotateX(0deg) scale(0.98);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  transition: transform 0.1s ease, box-shadow 0.1s ease;
}

.glass-button:focus-visible {
  outline: 2px solid rgba(255, 255, 255, 0.8);
  outline-offset: 2px;
}

/* --- Internal Elements --- */
.glass-button .glass-button-shine {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  background: radial-gradient(circle at var(--mouse-x) var(--mouse-y), rgba(255, 255, 255, 0.5), transparent 40%);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 1;
}

.glass-button:hover:not(.glass-button-disabled):not(.glass-button-loading) .glass-button-shine {
  opacity: 1;
}

.glass-button-content {
  position: relative;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  transform: translateZ(20px);
  transition: transform 0.3s ease;
}

.glass-button:hover:not(.glass-button-disabled):not(.glass-button-loading) .glass-button-content {
  transform: translateZ(30px) scale(1.02);
}

.glass-button-icon,
.glass-button-arrow {
  width: 20px;
  height: 20px;
  transition: transform 0.2s ease;
}

.glass-button:hover .glass-button-arrow {
  transform: translateX(3px);
}

/* --- Special States --- */
.glass-button-disabled {
  background: rgba(255, 255, 255, 0.05);
  border-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.4);
  cursor: not-allowed;
  transform: none !important; /* Override 3D effect */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.glass-button-loading {
  cursor: wait;
}

.glass-button-spinner {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: glass-spin 1s linear infinite;
}

@keyframes glass-spin {
  to { 
    transform: rotate(360deg); 
  }
}

/* --- Accessibility --- */
@media (prefers-reduced-motion: reduce) {
  .glass-button,
  .glass-button-content,
  .glass-button-icon,
  .glass-button-arrow {
    transition: none;
  }
  
  .glass-button:hover,
  .glass-button:active {
    transform: none;
  }
}